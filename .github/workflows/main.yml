name: Build & Zip (.NET)

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  DOTNET_VERSION: "9.0.x"                 # Change if you target a different SDK
  PROJECT_PATH: "MareSynchronos/MareSynchronos.csproj"  # <- << SET THIS to your .csproj path
  CONFIGURATION: "Release"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.sln', 'global.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore
        run: dotnet restore "${{ env.PROJECT_PATH }}"

      - name: Build
        run: dotnet publish "${{ env.PROJECT_PATH }}" -c "${{ env.CONFIGURATION }}"

      # Runs tests if a test project exists; doesn't fail the build if there are none
      - name: Test (if any)
        run: |
          set -e
          if ls -1 **/*Tests.csproj >/dev/null 2>&1; then
            dotnet test -c "${{ env.CONFIGURATION }}" --no-build --verbosity normal
          else
            echo "No *Tests.csproj found â€” skipping tests."
          fi

      - name: Publish
        run: |
          dotnet publish "${{ env.PROJECT_PATH }}" \
            -c "${{ env.CONFIGURATION }}" \
            -o publish/

      - name: Zip publish output
        run: |
          set -e
          ARTIFACT_NAME="$(basename "$GITHUB_REPOSITORY")-${GITHUB_REF_NAME:-manual}-${GITHUB_SHA::7}.zip"
          cd publish
          zip -r "../$ARTIFACT_NAME" .
          echo "ARTIFACT_NAME=$ARTIFACT_NAME" >> $GITHUB_ENV

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_NAME }}
          if-no-files-found: error